
### basic services and a single container for qlver
# PROJECT MUST BE A DNS COMPLAINT NAME. NO UNDER_SCORES
# Environment variables need to be set in a .env file:
# UI http://localhost:8176
version: '3.9'
networks:
  qlever_network:
      name: qlever_network_${QLEVER_NET:-base}
      external: false

  traefik_proxy:
    name: traefik_proxy
    external: false
#export USER_ID=$(id -u)
#export GROUP_ID=$(id -g)
volumes:
  qleverflow_data:
    name: qleverflow_data_${PROJECT:-geocodesexamples}
    external: false
    #name: qlever
configs:
  qlever_config:
    name: glever-config-${PROJECT:-geocodesexamples}
    file: ../catalogues/${PREFIX-data}-${PROJECT:-geocodesexamples}/Qleverfile.${PROJECT:-geocodesexamples}
    external: false
services:
# PROJECT MUST BE A DNS COMPLAINT NAME. NO UNDER_SCORES
 qlever-server-base:

    #user: "1000:1000"  # Will be set via .env file
    working_dir: /data
    ports:
      - "7019:7019"
    volumes:
      - /etc/localtime:/etc/localtime:ro
# /data not needed, but for debugging and easy start stop
      - type: bind
        source: ./rundata
        target: /data
    configs:
      - source: qlever_config
        target: /data/Qleverfile
   # entrypoint: /qlever/docker-entrypoint.sh
    command: >
        ' ls -l && qlever get-data  --log-level DEBUG && qlever index --overwrite-existing --text-index from_text_records_and_literals && qlever start --use-text-index yes --run-in-foreground '

    #restart: unless-stopped
    networks: &network
      - qlever_network
      # do not need for local
      #- traefik_proxy
    labels: !reset []


 qlever-ui-base:
    image: docker.io/adfreiburg/qlever-ui:latest
    hostname: qlever-ui-${PROJECT:-geocodesexamples}
    #init: true
    volumes:
      - type: volume
        source: qleverflow_data
        target: /app/db/
      - type: bind
        source: ../catalogues/${PREFIX-data}-${PROJECT:-geocodesexamples}/Qleverfile-ui.yml
        target: /app/Qleverfile-ui-deploy.yml
    ports:
       - "8176:7000"
    environment:
      # this will hopefully be a hostname from the above service
      # hostname generated from services
      QLEVER_HOST: http://qlever-server-${PROJECT:-geocodesexamples}:7007
#      QLEVER_HOST: "http://0.0.0.0:7007"
   #    entrypoint: bash
    command: bash -c "python manage.py config default /app/Qleverfile-ui-deploy.yml --hide-all-other-backends && gunicorn --bind :7000 --workers 3 --limit-request-line 10000 qlever.wsgi:application"
#      - gunicorn
#      - "--bind"
#      - ":7000"
#      - "--workers"
#      - "3"
#      - "--limit-request-line"
#      - "10000"
#      - "qlever.wsgi:application"
    #restart: unless-stopped
    networks:  *network
    labels: !reset []

 qlever-petrimaps-base:
    image: docker.io/adfreiburg/qlever-petrimaps:latest
    hostname: qlever-petrimaps
    ports:
       - "9090:9090"
    networks:  *network
    labels: !reset []
