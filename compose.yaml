---
networks:
  resilent_game:
#      name: resilent_game_${GAME_HOSTNAME:-game}

#export USER_ID=$(id -u)
#export GROUP_ID=$(id -g)

services:

 qlever.server.mr:
    image: docker.io/adfreiburg/qlever:latest
    container_name: qlever.server.mr
    init: true
    user: "1000:1000"  # Will be set via .env file
    working_dir: /data
    ports:
      - "7019:7019"
    environment:
      - PATH="/qlever:/qlever/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - LANG="C.UTF-8"
      - LC_ALL="C.UTF-8"
      - LC_CTYPE="C.UTF-8"
      - DEBIAN_FRONTEND="noninteractive"
      - QLEVER_PROFILE="/etc/profile.d/qlever.sh"
      - QLEVER_ARGCOMPLETE_ENABLED="1"
      - QLEVER_IS_RUNNING_IN_CONTAINER="1"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/fils/scratch/qleverflow/configs/marineregions:/data
    entrypoint: /qlever/docker-entrypoint.sh
    command: >
      -c 'ServerMain -i marineregions -j 8 -p 7019 -m 25G -c 20G -e 1G -k 200 -s 240s'
    restart: unless-stopped
    networks:
      - resilent_game


 qlever.ui.mr:
    image: docker.io/adfreiburg/qlever-ui:latest
    container_name: qlever.ui.marineregions
    init: true
    volumes:
      - ./db:/app/db
    ports:
      - "8176:7000"
    environment:
      QLEVER_HOST: "http://workstation.lan:7007"
#      QLEVER_HOST: "http://0.0.0.0:7007"
   #    entrypoint: bash
    command:
      - gunicorn
      - "--bind"
      - ":7000"
      - "--workers"
      - "3"
      - "--limit-request-line"
      - "10000"
      - "qlever.wsgi:application"
    restart: unless-stopped
    networks:
      - resilent_game

 qlever.petrimaps:
    image: docker.io/adfreiburg/qlever-petrimaps:latest
    container_name: qlever.ui.petrimaps
    hostname: qlever-petrimaps
    ports:
      - "9090:9090"
    networks:
      - resilent_game


